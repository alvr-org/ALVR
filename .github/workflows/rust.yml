name: Rust

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

env:
  CARGO_TERM_COLOR: always

jobs:
  build_windows:
    runs-on: windows-latest
    env:
      LIBCLANG_PATH: 'C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\Llvm\x64\bin'
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
      - uses: Swatinem/rust-cache@v1

      - name: Build crates
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: -p alvr_xtask -p alvr_server -p alvr_launcher --verbose

  build_linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
      - uses: Swatinem/rust-cache@v1

      - name: Build and install dependencies
        env:
          RUST_BACKTRACE: 1
        run: |
          sudo apt update
          sudo apt install build-essential pkg-config nasm libva-dev libdrm-dev libvulkan-dev libx264-dev libx265-dev
          cargo xtask build-ffmpeg-linux
          cd deps/ubuntu/FFmpeg-n4.4 && sudo make install && cd ../../..
          sudo apt install build-essential pkg-config cmake libasound2-dev libgtk-3-dev libvulkan-dev libunwind-dev

      - name: Build crates
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: -p alvr_xtask -p alvr_launcher -p alvr_server -p alvr_vulkan-layer -p vrcompositor-wrapper --verbose

  tests:
    runs-on: windows-latest
    env:
      LIBCLANG_PATH: 'C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\Llvm\x64\bin'
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
      - uses: Swatinem/rust-cache@v1

      - name: Run tests
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: -p alvr_common --verbose

  rustfmt:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          components: rustfmt
      - uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

  clippy:
    runs-on: windows-latest
    env:
      LIBCLANG_PATH: 'C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\Llvm\x64\bin'
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          components: clippy
      - uses: Swatinem/rust-cache@v1

      - uses: ErichDonGubler/clippy-check@fix-windows-lf-breaking-reports
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          args: -p alvr_xtask -p alvr_common -p alvr_server -p alvr_launcher
