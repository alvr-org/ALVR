apply plugin: 'com.android.application'
apply plugin: 'org.mozilla.rust-android-gradle.rust-android'

android {
    buildToolsVersion = "30.0.3"
    compileSdkVersion 30
    ndkVersion "22.0.7026061"
    defaultConfig {
        applicationId "alvr.client"
        minSdkVersion 24
        targetSdkVersion 30
        versionCode 59
        versionName "16.0.0-rc1"
        externalNativeBuild {
            cmake {
                cppFlags "-std=c++17 -fexceptions -frtti"
            }
        }
    }
    buildTypes {
        release {
            signingConfig signingConfigs.debug
            ndk {
                abiFilters "arm64-v8a"
            }
            cargo {
                profile = "release"
            }
        }
        debug {
            jniDebuggable = true
            ndk {
                abiFilters "arm64-v8a"
            }
        }
    }
    externalNativeBuild {
        cmake {
            path "CMakeLists.txt"
        }
    }
    sourceSets {
        main {
            jniLibs.srcDirs = ["src/main/jniLibs"]
        }
    }
    compileOptions {
        sourceCompatibility = '1.8'
        targetCompatibility = '1.8'
    }

    flavorDimensions "headset", "package"
    productFlavors {
        OculusQuest {
            dimension "headset"
            applicationIdSuffix ".quest"
        }
        OculusGo {
            dimension "headset"
            applicationIdSuffix ".go"
            minSdkVersion 21
        }
        Stable {
            dimension "package"
        }
        Nightly {
            dimension "package"
            applicationIdSuffix ".nightly"
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar', '*.so'])
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
}

build.dependsOn(':extractNdk')

cargo {
    module = "../.."
    libname = "alvr_client"
    targets = ["arm64"]
    targetDirectory = "../../../../target"
}
tasks.whenTaskAdded { task ->
    if (task.name.startsWith('javaPreCompile')) {
        task.dependsOn 'cargoBuild'
    }
}
