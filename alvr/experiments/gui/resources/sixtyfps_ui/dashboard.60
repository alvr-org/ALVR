import { StandardButton, Button, VerticalBox, ListView, Slider, GroupBox, HorizontalBox, VerticalBox, ScrollView } from "sixtyfps_widgets.60";
import { StringName } from "common.60";
import { ConnectionPanel, ClientData } from "components/connection.60";
import { StatisticsPanel } from "components/statistics.60";
import { SettingsPanel } from "components/settings.60";
import { LogsPanel } from "components/logs.60";

// todo: use something more advanced
TabButton := Button { 
    property<bool> selected;

    border-color: transparent;
    border-radius: 10px;

    property<color> base-color: selected ? #9bcfff : white;
    background: base-color.darker(touch-area.has-hover ? (touch-area.pressed ? 0.2 : 0.1) : 0);

    animate background {
        duration: 100ms;
    }

    touch-area := TouchArea {
        clicked => { parent.clicked() }
    }
}

Dashboard := Window {
    preferred-width: 800px;
    preferred-height: 600px;
    title: "ALVR Dashboard";
    icon: @image-url("../images/favicon.png");

    property<bool> has-notification: false;
    property<string> selected-tab: "connection";

    VerticalLayout {
        HorizontalLayout {
            VerticalBox {
                Image {
                    source: @image-url("../images/favicon.png");
                    height: 30px;
                }
    
                connection-tab-button := TabButton {
                    icon: @image-url("../images/favicon.png");
                    text: "Connection";
                    selected: selected-tab == "connection";
                    clicked => { selected-tab = "connection" }
                }
                statistics-tab-button := TabButton {
                    icon: @image-url("../images/favicon.png");
                    text: "Statistics";
                    selected: selected-tab == "statistics";
                    clicked => { selected-tab = "statistics" }
                }
                settings-tab-button := TabButton {
                    icon: @image-url("../images/favicon.png");
                    text: "Settings";
                    selected: selected-tab == "settings";
                    clicked => { selected-tab = "settings" }
                }
                installation-tab-button := TabButton {
                    icon: @image-url("../images/favicon.png");
                    text: "Installation";
                    selected: selected-tab == "installation";
                    clicked => { selected-tab = "installation" }
                }
                logs-tab-button := TabButton {
                    icon: @image-url("../images/favicon.png");
                    text: "Logs";
                    selected: selected-tab == "logs";
                    clicked => { selected-tab = "logs" }
                }
                about-tab-button := TabButton {
                    icon: @image-url("../images/favicon.png");
                    text: "About";
                    selected: selected-tab == "about";
                    clicked => { selected-tab = "about" }
                }
    
                Rectangle {  } // something that stretches
    
                language-tab-button := TabButton {
                    icon: @image-url("../images/favicon.png");
                    text: "Language";
                    // clicked => { language-popup.show() }
                }
            }

            Rectangle {
                horizontal-stretch: 1;

                VerticalBox {
                    property<length> vp-width: width - 40px;

                    Text {
                        font-size: 30px;
                        text: selected-tab;
                    }

                    if selected-tab == "connection" : ConnectionPanel {
                        clients: [{ display-name: "HMD", hostname: "12345.client.alvr" }];
                    }
                    if selected-tab == "statistics" : StatisticsPanel { }
                    if selected-tab == "settings" : SettingsPanel { }
                    if selected-tab == "installation" : Rectangle {}
                    if selected-tab == "logs" : LogsPanel {
                        entries: [{ time: "time", type: "error", message: "test" },{ time: "1324", type: "warning", message: "test" }];
                    }
                    if selected-tab == "about" : Rectangle {}
                }
            }
        }

        Rectangle {
            property<string> type: "error";

            background: type == "error" ? red : (type == "warning" ? yellow : (type == "info" ? lightblue : white));
            height: has-notification ? 20px : 0px;
            animate height {
                duration: 100ms;
            }

            notification-text := Text { text: "my notification"; }
        }

    }
}
